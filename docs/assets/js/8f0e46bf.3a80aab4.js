"use strict";(self.webpackChunkdocusaurus_example=self.webpackChunkdocusaurus_example||[]).push([[822],{719:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>p,toc:()=>u});var n=a(4848),s=a(8453),o=a(4110);const i="/**\n * Configure global options and content for your app.\n */\nexport const config = {\n  title: 'STRUDEL + React + MUI',\n  navbar: {\n    title: 'My Project',\n    logo: 'strudel-logo-icon.png',\n    items: [\n      {\n        label: 'Playground',\n        path: '/playground'\n      }\n    ]\n  },\n  footer: {\n    info: 'Describe your project, place a copyright statement, or credit your funding organizations.',\n    image: 'strudel-logo-header.png',\n    links: [\n      {\n        label: 'Playground',\n        path: '/playground'\n      },\n    ]\n  },\n  theme: {\n    mode: 'light',\n    primaryColor: '#1976d2',\n    secondaryColor: '#9c27b0',\n    backgroundColor: '#F5F5F6',\n    paperBackgroundColor: '#FFFFFF',\n    fontFamily: '\"Helvetica\", \"Verdana\", \"Arial\", sans-serif'\n  }\n}";var r=a(1662),l=a(7206);const c={title:"First Steps"},d=void 0,p={id:"getting-started/first-steps",title:"First Steps",description:"This page will cover the basic workflow for using STRUDEL Kit to build a web UI.",source:"@site/docs/getting-started/first-steps.mdx",sourceDirName:"getting-started",slug:"/getting-started/first-steps",permalink:"/strudel-kit/docs/getting-started/first-steps",draft:!1,unlisted:!1,editUrl:"https://github.com/strudel-science/strudel-kit/tree/main/docs/docs/getting-started/first-steps.mdx",tags:[],version:"current",frontMatter:{title:"First Steps"},sidebar:"mainSidebar",previous:{title:"Quickstart",permalink:"/strudel-kit/docs/getting-started/quickstart"},next:{title:"Combining Sections",permalink:"/strudel-kit/docs/guides/combine-sections"}},h={},u=[{value:"Confirm CLI installation",id:"confirm-cli-installation",level:2},{value:"Build a base app",id:"build-a-base-app",level:2},{value:"Base app files breakdown",id:"base-app-files-breakdown",level:3},{value:"Start up your app",id:"start-up-your-app",level:3},{value:"Configure up your app",id:"configure-up-your-app",level:3},{value:"Add a Task Flow",id:"add-a-task-flow",level:2},{value:"Task Flow files breakdown",id:"task-flow-files-breakdown",level:3},{value:"Customize your Task Flow",id:"customize-your-task-flow",level:3}];function g(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"This page will cover the basic workflow for using STRUDEL Kit to build a web UI."}),"\n",(0,n.jsx)(t.p,{children:"There are three primary steps to using STRUDEL Kit:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Build a base app"}),"\n",(0,n.jsx)(t.li,{children:"Add Task Flows"}),"\n",(0,n.jsx)(t.li,{children:"Customize"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"confirm-cli-installation",children:"Confirm CLI installation"}),"\n",(0,n.jsx)(t.p,{children:"Confirm that you have the strudel-cli installed in your current environment:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"strudel --version\n"})}),"\n",(0,n.jsx)(t.h2,{id:"build-a-base-app",children:"Build a base app"}),"\n",(0,n.jsxs)(t.p,{children:["The first step to getting started with the STRUDEL Kit is to build a base app using the ",(0,n.jsx)(t.code,{children:"create-app"})," command."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"strudel create-app my-app\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This will generate a new directory called ",(0,n.jsx)(t.code,{children:"my-app"})," with the basic scaffolding for a STRUDEL-powered React app. The name ",(0,n.jsx)(t.code,{children:"my-app"})," can be replaced with any name you like. It's typical to us all lowercase kebab-case for project names."]}),"\n",(0,n.jsxs)(t.p,{children:["The app comes pre-baked with all libraries in the ",(0,n.jsx)(t.a,{href:"#",children:"STRUDEL Tech Stack"})," as well as a set of custom components that are used across the app and the Task Flow templates."]}),"\n",(0,n.jsx)(t.h3,{id:"base-app-files-breakdown",children:"Base app files breakdown"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-py",children:"my-app\n\u251c\u2500\u2500 public\n\u251c\u2500\u2500 src\n\u2502  \u251c\u2500\u2500 components # Components that are shared across the app\n\u2502  \u251c\u2500\u2500 context # State variables and actions shared across the app\n\u2502  \u251c\u2500\u2500 pages # Task Flows and pages that are automatically registered to the app router\n\u2502  \u2502  \u251c\u2500\u2500 playground\n\u2502  \u2502  \u2502  \u2514\u2500\u2500 index.tsx # Playground component for testing code\n\u2502  \u2502  \u2514\u2500\u2500 index.tsx # Home page component\n\u2502  \u251c\u2500\u2500 types # TypeScript definitions used across the app\n\u2502  \u251c\u2500\u2500 utils # Utility functions and hooks used across the app\n\u2502  \u251c\u2500\u2500 App.tsx # Top-level app component\n\u2502  \u251c\u2500\u2500 declarations.d.ts\n\u2502  \u251c\u2500\u2500 index.css # Base CSS styles\n\u2502  \u251c\u2500\u2500 main.tsx # App entry point\n\u2502  \u251c\u2500\u2500 router.ts # Auto-generated routes\n\u2502  \u251c\u2500\u2500 theme.tsx # Full theme configuration\n\u2502  \u2514\u2500\u2500 vite-env.d.ts\n\u251c\u2500\u2500 .eslintrc.cjs\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 strudel.config.ts # Base strudel configuration file\n\u251c\u2500\u2500 tsconfig.json\n\u251c\u2500\u2500 tsconfig.node.json\n\u2514\u2500\u2500 vite.config.ts\n"})}),"\n",(0,n.jsx)(t.h3,{id:"start-up-your-app",children:"Start up your app"}),"\n",(0,n.jsxs)(t.p,{children:["Once your app is generated, you can ",(0,n.jsx)(t.code,{children:"cd"})," into the new directory, install the dependencies, and start the app."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"cd my-app\nnpm install\nnpm start\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Your app should now be running at ",(0,n.jsx)(t.a,{href:"http://localhost:5173",children:"http://localhost:5173"}),". At this point your app will have a home page at the root path ",(0,n.jsx)(t.code,{children:"/"})," and a playground page at ",(0,n.jsx)(t.code,{children:"/playground"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"configure-up-your-app",children:"Configure up your app"}),"\n",(0,n.jsxs)(t.p,{children:["STRUDEL Kit makes use of a simple configuration file at the root of your app called ",(0,n.jsx)(t.code,{children:"strudel.config.ts"}),". Here you can set a few basic global options and content items like a site logo, navigation links, and basic theme variables."]}),"\n",(0,n.jsx)(o.A,{language:"ts",title:"strudel.config.ts",children:i}),"\n",(0,n.jsxs)(t.p,{children:["The theme variables available in the config are only the most common theme customizations. You can make even more customizations in ",(0,n.jsx)(t.code,{children:"src/theme.tsx"}),". See the Theme Customization guide for more info."]}),"\n",(0,n.jsx)(t.h2,{id:"add-a-task-flow",children:"Add a Task Flow"}),"\n",(0,n.jsxs)(t.p,{children:["After you have your base app up and running, you can add Task Flow templates into your app. Task Flows templates are full UI flows built out as React components that plug directly into your base app. Run the following command from inside the root of your app directory to add a Task Flow called ",(0,n.jsx)(t.code,{children:"my-taskflow"})," that uses the ",(0,n.jsx)(t.code,{children:"compare-data"})," Task Flow template:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"strudel add-taskflow my-taskflow --template compare-data\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This generates a new directory at ",(0,n.jsx)(t.code,{children:"src/pages/my-taskflow"})," with all the files you need to run the initial Task Flow."]}),"\n",(0,n.jsx)(t.h3,{id:"task-flow-files-breakdown",children:"Task Flow files breakdown"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-py",children:"my-taskflow\n\u251c\u2500\u2500 _config\n\u2502  \u251c\u2500\u2500 taskflow.config.ts # Task Flow configuration file\n\u2502  \u2514\u2500\u2500 taskflow.types.ts # Type definitions for the config object\n\u251c\u2500\u2500 _context\n\u2502  \u251c\u2500\u2500 ContextProvider.tsx # State variables shared across the Task Flow\n\u2502  \u2514\u2500\u2500 actions.ts # Actions shared across the Task Flow\n\u251c\u2500\u2500 _layout.tsx # Layout wrapper for all the Task Flow pages\n\u251c\u2500\u2500 compare.tsx # Compare page component\n\u251c\u2500\u2500 index.tsx # Initial page component\n\u2514\u2500\u2500 new.tsx # New page component\n"})}),"\n",(0,n.jsxs)(t.p,{children:["You can add one Task Flow after the other or add them progressively as you are ready to start working with them in your app. The name you give your Task Flow maps to the directory name so make sure that each Task Flow has a unique name. You can pass any of the available templates to the ",(0,n.jsx)(t.code,{children:"--template"})," option. Here's what it would look like to add another Task Flow using the ",(0,n.jsx)(t.code,{children:"explore-data"})," template:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"strudel add-taskflow my-other-taskflow --template explore-data\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Each Task Flow is registered as a URL route in your app as soon as it's added. For example, after adding the above Task Flows, you can now go to ",(0,n.jsx)(t.a,{href:"http://localhost:5173/my-taskflow",children:"http://localhost:5173/my-taskflow"})," and ",(0,n.jsx)(t.a,{href:"http://localhost:5173/my-other-taskflow",children:"http://localhost:5173/my-other-taskflow"})," to see your templates in action."]}),"\n",(0,n.jsx)(t.h3,{id:"customize-your-task-flow",children:"Customize your Task Flow"}),"\n",(0,n.jsxs)(t.p,{children:["Similar to the base app, each Task Flow comes with its own configuration file. You can find the configuration file in ",(0,n.jsx)(t.code,{children:"_config/taskflow.config.ts"})," inside the newly created directory for your Task Flow. Here you can start customizing the content in your Task Flow and connecting your own data sources. Check out the ",(0,n.jsx)(t.a,{href:"#",children:"Task Flows"})," section for more information about how to configure each Task Flow."]}),"\n",(0,n.jsx)(t.p,{children:"If you'd like to customize the Task Flow beyond what you can do with the configuration file, you have full reign to edit the components in the template. Check out these helpful guides on customizing Task Flow components:"}),"\n",(0,n.jsxs)(r.Ay,{container:!0,columnSpacing:2,rowSpacing:2,marginBottom:2,children:[(0,n.jsx)(r.Ay,{item:!0,sm:4,children:(0,n.jsx)(l.V,{href:"/strudel-kit/docs/guides/tutorials/basic-app-with-strudel/customize-taskflow",target:"_self",label:"Customize Your Task Flow"})}),(0,n.jsx)(r.Ay,{item:!0,sm:4,children:(0,n.jsx)(l.V,{href:"/strudel-kit/docs/guides/combine-sections",target:"_self",label:"Combining Sections"})}),(0,n.jsx)(r.Ay,{item:!0,sm:4,children:(0,n.jsx)(l.V,{href:"/strudel-kit/docs/guides/connect-task-flows-together",target:"_self",label:"Connecting Task Flows"})})]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}},7206:(e,t,a)=>{a.d(t,{V:()=>d});a(6540);var n=a(3416),s=a(516),o=a(5292),i=a(8999),r=a(7733),l=a(7859),c=a(4848);const d=e=>{let{href:t,target:a="_blank",label:d,image:p,description:h}=e;return(0,c.jsx)(n.A,{sx:{background:"none",border:"1px solid",height:"100%",".MuiCardActionArea-root:hover":{textDecoration:"none"}},children:(0,c.jsx)(s.A,{href:t,target:a,sx:{height:"100%"},children:(0,c.jsx)(o.A,{children:(0,c.jsxs)(i.A,{spacing:1,children:[(0,c.jsxs)(i.A,{direction:"row",spacing:1,alignItems:"center",children:[p&&(0,c.jsx)(r.A,{sx:{height:"40px",position:"relative",img:{height:"100%",width:"auto"}},children:p}),(0,c.jsx)(l.A,{gutterBottom:!0,variant:"h6",component:"div",children:d})]}),h&&(0,c.jsx)(l.A,{variant:"body2",color:"text.secondary",children:h})]})})})})}},9777:(e,t,a)=>{a.d(t,{A:()=>s});var n=a(6540);const s={React:n,...n}}}]);