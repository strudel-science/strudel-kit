"use strict";(self.webpackChunkstrudel_docs=self.webpackChunkstrudel_docs||[]).push([[960],{7016:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=t(4848),i=t(8453),a=t(4110);const o="import { RunComputationConfig } from './taskflow.types';\n\nexport const taskflow: RunComputationConfig = {\n  properties: {\n    /**\n     * Word (in singular form) to use in the UI for the distinct computation runs.\n     * For example, if each run should be called a \"scenario\", this value should be `\"scenario\"`\n     */\n    itemName: 'scenario',\n    /**\n     * Pluralized version of `compareItem`. This is used in the UI when `compareItem` needs to be plural.\n     * For example, if each run should be called a \"scenario\", this value should be `\"scenarios\"`.\n     */\n    itemNamePlural: 'scenarios',\n  },\n  data: {\n    items: {\n      /**\n       * Source of the data for the initial list of items.\n       */\n      source: 'data/default/run-computation/list.json',\n      /**\n       * Field name for the unique ID in the data source.\n       */\n      idField: 'id',\n    },\n    inputs: {\n      /**\n       * Source of the data for the table on the inputs page.\n       */\n      source: 'data/default/run-computation/inputs.json',\n      /**\n       * Field name for the unique ID in the data source.\n       */\n      idField: 'id',\n    },\n    lineChart: {\n      /**\n       * Source of the data for the line chart on the results page.\n       * The return format must be compatible with Plotly's data attribue.\n       * See the [Plotly Figure Reference](https://plotly.com/javascript/reference/index/) for more details.\n       */\n      source: 'data/default/run-computation/results_line_chart.json',\n    },\n    barChart: {\n      /**\n       * Source of the data for the bar chart on the results page.\n       * The return format must be compatible with Plotly's data attribue.\n       * See the [Plotly Figure Reference](https://plotly.com/javascript/reference/index/) for more details.\n       */\n      source: 'data/default/run-computation/results_bar_chart.json',\n    },\n    results: {\n      /**\n       * Source of the data for the table on the results page.\n       */\n      source: 'data/default/run-computation/results_table.json',\n      /**\n       * Field name for the unique ID in the data source.\n       */\n      idField: 'id',\n    },\n  },\n  pages: {\n    index: {\n      /**\n       * Title to appear at the top of the initial items list page.\n       */\n      title: 'Scenario List',\n      /**\n       * Text to appear underneath the title at the top of the initial items list page.\n       */\n      description:\n        'Scenarios represent a set of analysis inputs / parameters / settings and the results of that analysis.',\n      /**\n       * List of column definition objects for the columns in the table on the list page.\n       */\n      tableColumns: [\n        {\n          field: 'name',\n          headerName: 'Scenario Name',\n          width: 200,\n        },\n        {\n          field: 'analysisType',\n          headerName: 'Analysis Type',\n          width: 200,\n        },\n        {\n          field: 'createdDate',\n          headerName: 'Date Created',\n          width: 200,\n        },\n        {\n          field: 'status',\n          headerName: 'Status',\n          width: 200,\n        },\n      ],\n    },\n    dataInputs: {\n      /**\n       * Title to appear at the top of the inputs page and in the breadcrumbs.\n       */\n      title: 'Data Inputs',\n      /**\n       * List of column definition objects for the columns in the table on the inputs page.\n       */\n      tableColumns: [\n        {\n          field: 'name',\n          headerName: 'Unit Name',\n          width: 200,\n        },\n        {\n          field: 'unitType',\n          headerName: 'Unit Type',\n          width: 200,\n        },\n        {\n          field: 'constraints',\n          headerName: 'Constraints',\n          width: 200,\n        },\n        {\n          field: 'lowerBound',\n          headerName: 'Lower Bound',\n          width: 200,\n          type: 'number',\n        },\n        {\n          field: 'upperBound',\n          headerName: 'Upper Bound',\n          width: 200,\n          type: 'number',\n        },\n      ],\n    },\n    settings: {\n      /**\n       * Title to appear at the top of the settings page and in the breadcrumbs.\n       */\n      title: 'Optimization Settings',\n    },\n    results: {\n      /**\n       * Title to appear at the top of the results page and in the breadcrumbs.\n       */\n      title: 'Results',\n      /**\n       * List of column definition objects for the columns in the table on the results page.\n       */\n      tableColumns: [\n        {\n          field: 'name',\n          headerName: 'Unit Name',\n          width: 200,\n        },\n        {\n          field: 'unitType',\n          headerName: 'Unit Type',\n          width: 200,\n        },\n        {\n          field: 'constraints',\n          headerName: 'Constraints',\n          width: 200,\n        },\n        {\n          field: 'lowerBound',\n          headerName: 'Lower Bound',\n          width: 200,\n          type: 'number',\n        },\n        {\n          field: 'upperBound',\n          headerName: 'Upper Bound',\n          width: 200,\n          type: 'number',\n        },\n      ],\n    },\n  },\n};\n",r={title:"Run Computation"},d="Run Computation",l={id:"task-flows/run-computation",title:"Run Computation",description:"Links",source:"@site/docs/task-flows/run-computation.mdx",sourceDirName:"task-flows",slug:"/task-flows/run-computation",permalink:"/strudel-kit/docs/task-flows/run-computation",draft:!1,unlisted:!1,editUrl:"https://github.com/strudel-science/strudel-kit/tree/main/docs/docs/task-flows/run-computation.mdx",tags:[],version:"current",frontMatter:{title:"Run Computation"},sidebar:"mainSidebar",previous:{title:"Monitor Activities",permalink:"/strudel-kit/docs/task-flows/monitor-activities"},next:{title:"Search Data Repositories",permalink:"/strudel-kit/docs/task-flows/search-data-repositories"}},u={},c=[{value:"Links",id:"links",level:2},{value:"Use this Task Flow",id:"use-this-task-flow",level:2},{value:"Generated Files",id:"generated-files",level:2},{value:"Pages",id:"pages",level:2},{value:"<code>index.tsx</code>",id:"indextsx",level:4},{value:"<code>[id]/data-inputs.tsx</code>",id:"iddata-inputstsx",level:4},{value:"<code>[id]/settings.tsx</code>",id:"idsettingstsx",level:4},{value:"<code>[id]/running.tsx</code>",id:"idrunningtsx",level:4},{value:"<code>[id]/results.tsx</code>",id:"idresultstsx",level:4},{value:"Configuration",id:"configuration",level:2}];function h(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"run-computation",children:"Run Computation"}),"\n",(0,s.jsx)(n.h2,{id:"links",children:"Links"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://strudel.science/design-system/task-flows/run-computation/",children:"Description and guidelines"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://strudel.science/strudel-kit/#/run-computation",children:"Live example"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/strudel-science/strudel-kit/tree/main/strudel-taskflows/src/pages/run-computation",children:"Source code"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"use-this-task-flow",children:"Use this Task Flow"}),"\n",(0,s.jsxs)(n.p,{children:["Before continuing, make sure you have followed the instructions to ",(0,s.jsx)(n.a,{href:"/strudel-kit/docs/getting-started/installation",children:"install the strudel-cli"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"From the root of your app, run the following on the command line:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"strudel add-taskflow my-taskflow --template run-computation\n"})}),"\n",(0,s.jsx)(n.h2,{id:"generated-files",children:"Generated Files"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"my-taskflow\n\u251c\u2500\u2500 _components\n\u2502  \u2514\u2500\u2500 NewScenarioModal.tsx\n\u251c\u2500\u2500 _config\n\u2502  \u251c\u2500\u2500 taskflow.config.ts\n\u2502  \u2514\u2500\u2500 taskflow.types.ts\n\u251c\u2500\u2500 _context\n\u2502  \u251c\u2500\u2500 ContextProvider.tsx\n\u2502  \u2514\u2500\u2500 actions.ts\n\u251c\u2500\u2500 [id]\n\u2502  \u251c\u2500\u2500 _layout.tsx\n\u2502  \u251c\u2500\u2500 data-inputs.tsx\n\u2502  \u251c\u2500\u2500 results.tsx\n\u2502  \u251c\u2500\u2500 running.tsx\n\u2502  \u2514\u2500\u2500 settings.tsx\n\u251c\u2500\u2500 _layout.tsx\n\u2514\u2500\u2500 index.tsx\n"})}),"\n",(0,s.jsx)(n.h2,{id:"pages",children:"Pages"}),"\n",(0,s.jsx)(n.h4,{id:"indextsx",children:(0,s.jsx)(n.code,{children:"index.tsx"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"URL Route"}),": ",(0,s.jsx)(n.code,{children:"/"}),(0,s.jsx)(n.br,{}),"\n","First page of the Run Computation Task Flow. Displays a list of existing runs and a button to create a new run."]}),"\n",(0,s.jsx)(n.h4,{id:"iddata-inputstsx",children:(0,s.jsx)(n.code,{children:"[id]/data-inputs.tsx"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"URL Route"}),": ",(0,s.jsx)(n.code,{children:"/:id/data-inputs"}),(0,s.jsx)(n.br,{}),"\n","Data inputs page of the Run Computation Task Flow. The first step in a computation which displays a set of input data for the computation."]}),"\n",(0,s.jsx)(n.h4,{id:"idsettingstsx",children:(0,s.jsx)(n.code,{children:"[id]/settings.tsx"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"URL Route"}),": ",(0,s.jsx)(n.code,{children:"/:id/settings"}),(0,s.jsx)(n.br,{}),"\n","Settings page of the Run Computation Task Flow. Displays a form for editing parameters to pass to the computation when it runs."]}),"\n",(0,s.jsx)(n.h4,{id:"idrunningtsx",children:(0,s.jsx)(n.code,{children:"[id]/running.tsx"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"URL Route"}),": ",(0,s.jsx)(n.code,{children:"/:id/running"}),(0,s.jsx)(n.br,{}),"\n","Running page of the Run Computation Task Flow. Displays a progress bar and message while the computation is in progress."]}),"\n",(0,s.jsx)(n.h4,{id:"idresultstsx",children:(0,s.jsx)(n.code,{children:"[id]/results.tsx"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"URL Route"}),": ",(0,s.jsx)(n.code,{children:"/:id/results"}),(0,s.jsx)(n.br,{}),"\n","Results page of the Run Computation Task Flow. Displays output data and visualizations from the computation."]}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["This Task Flow can be configured from the ",(0,s.jsx)(n.code,{children:"taskflow.config.ts"})," file in the ",(0,s.jsx)(n.code,{children:"_config"})," directory of the generated template files."]}),"\n",(0,s.jsx)(a.A,{language:"ts",title:"taskflow.config.ts",children:o})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9777:(e,n,t)=>{t.d(n,{A:()=>i});var s=t(6540);const i={React:s,...s}}}]);